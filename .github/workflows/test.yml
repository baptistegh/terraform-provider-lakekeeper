# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run Go linter
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
      - name: Install terraform cli
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - name: Run terraform linter on examples and playground
        run: terraform fmt -diff -check -recursive playground/ examples/
      - uses: mfinelli/setup-shfmt@v3
      - name: Run sh linter on examples
        run: shfmt -l -s -d examples/

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: Check if docs are up to date
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test-unit:
    name: Terraform Provider Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: go test -v -cover ./internal/provider/ ./lakekeeper
        timeout-minutes: 10

  # Run acceptance tests in a matrix with Terraform CLI versions
  test-acceptance:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    env:
      LAKEKEEPER_ENDPOINT: http://localhost:8181
      LAKEKEEPER_AUTH_URL: http://localhost:30080/realms/iceberg/protocol/openid-connect/token
      LAKEKEEPER_CLIENT_ID: lakekeeper-admin
      LAKEKEEPER_CLIENT_SECRET: KNjaj1saNq5yRidVEMdf1vI09Hm0pQaL
      TF_ACC: 1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Restore Docker image cache
        uses: actions/cache@v4
        with:
          path: /tmp/.docker-cache
          key: docker-cache-${{ runner.os }}-lakekeeper
          restore-keys: |
            docker-cache-${{ runner.os }}-
      - name: Load Docker images (if cache hit)
        run: |
          if [ -f /tmp/.docker-cache/images.tar ]; then
            docker load -i /tmp/.docker-cache/images.tar
          fi
      - name: Starting Lakekeeper instance (and third parties)
        run: make testacc-up
      - run: |
          echo "Waiting for Lakekeeper to be healthy"
          ./scripts/await-healthy.sh
      - run: go test -v -cover --tags acceptance -v ./internal/provider/
        timeout-minutes: 10
      - name: Save Docker images for cache
        if: always()
        run: |
          mkdir -p /tmp/.docker-cache
          docker save $(docker compose -f run/docker-compose.yml config | grep image | awk '{print $2}') -o /tmp/.docker-cache/images.tar

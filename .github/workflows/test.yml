name: Tests

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: mfinelli/setup-shfmt@v4

      - run: go mod download
  
      - name: Run Go linter
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
  
      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
          terraform_version: 1.9.8

      - name: Run Terraform linter on examples and playground
        run: terraform fmt -recursive -check -diff ./examples ./playground

      - name: Run sh linter on examples
        run: shfmt -l -s -d ./examples
      
      - name: Fail if docs are not up to date
        run: make lint-generated

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --snapshot --skip sign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Run unit tests
  test-unit:
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: make test
        timeout-minutes: 10

  # Run acceptance tests in a matrix with Terraform CLI versions
  test-acceptance:
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # we currently support the last 3 patchs within a minor
        lakekeeper-version:
          - 'latest-main'
          - 'v0.9.3'
          - 'v0.9.4'
          - 'v0.9.5'
    env:
      LAKEKEEPER_ENDPOINT: http://localhost:8181
      LAKEKEEPER_AUTH_URL: http://localhost:30080/realms/iceberg/protocol/openid-connect/token
      LAKEKEEPER_CLIENT_ID: lakekeeper-admin
      LAKEKEEPER_CLIENT_SECRET: KNjaj1saNq5yRidVEMdf1vI09Hm0pQaL
      LAKEKEEPER_VERSION: ${{ matrix.lakekeeper-version }}
      TF_ACC: 1
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.12.2
          terraform_wrapper: false
      - run: go mod download
      - run: make testacc-up
      - run: |
          echo "Waiting for Lakekeeper to be healthy"
          ./scripts/await-healthy.sh
      - run: make testacc
        timeout-minutes: 10

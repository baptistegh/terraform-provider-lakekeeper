# Terraform Provider testing workflow.
name: Tests

on:
  push:
    branches:
      - main
  pull_request:

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read
  pull-requests: write

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run Go linter
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
      - name: Install terraform cli
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - name: Run Terraform linter on examples and playground
        run: terraform fmt -recursive -check -diff ./examples ./playground
      - name: Install shfmt cli
        uses: mfinelli/setup-shfmt@v3
      - name: Run sh linter on examples
        run: shfmt -l -s -d ./examples

  generate:
    name: Check Generated Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Check if docs are up to date
        run: make lint-generated

  # Run unit tests
  test-unit:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: make test
        timeout-minutes: 10

  # Run acceptance tests in a matrix with Terraform CLI versions
  test-acceptance:
    name: Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # we currently support the last 3 patchs within a minor
        lakekeeper-version:
          - 'v0.9.0'
          - 'v0.9.1'
          - 'v0.9.2'
    env:
      LAKEKEEPER_ENDPOINT: http://localhost:8181
      LAKEKEEPER_AUTH_URL: http://localhost:30080/realms/iceberg/protocol/openid-connect/token
      LAKEKEEPER_CLIENT_ID: lakekeeper-admin
      LAKEKEEPER_CLIENT_SECRET: KNjaj1saNq5yRidVEMdf1vI09Hm0pQaL
      LAKEKEEPER_VERSION: ${{ matrix.lakekeeper-version }}
      TF_ACC: 1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.12.2
          terraform_wrapper: false
      - run: go mod download
      - name: Starting Lakekeeper instance (and third parties)
        run: make testacc-up
      - run: |
          echo "Waiting for Lakekeeper to be healthy"
          ./scripts/await-healthy.sh
      - run: make testacc
        timeout-minutes: 10
